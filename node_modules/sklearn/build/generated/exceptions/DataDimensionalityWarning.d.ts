import { PythonBridge } from '@/sklearn/types';
/**
  Custom warning to notify potential issues with data dimensionality.

  For example, in random projection, this warning is raised when the number of components, which quantifies the dimensionality of the target projection space, is higher than the number of features, which quantifies the dimensionality of the original source space, to imply that the dimensionality of the problem will not be reduced.

  @see https://scikit-learn.org/stable/modules/generated/sklearn.exceptions.DataDimensionalityWarning.html
 */
export declare class DataDimensionalityWarning {
    id: string;
    opts: any;
    _py: PythonBridge;
    _isInitialized: boolean;
    _isDisposed: boolean;
    constructor(opts?: DataDimensionalityWarningOptions);
    get py(): PythonBridge;
    set py(pythonBridge: PythonBridge);
    /**
      Initializes the underlying Python resources.
  
      This instance is not usable until the `Promise` returned by `init()` resolves.
     */
    init(py: PythonBridge): Promise<void>;
    /**
      Disposes of the underlying Python resources.
  
      Once `dispose()` is called, the instance is no longer usable.
     */
    dispose(): Promise<void>;
    /**
      Exception.with_traceback(tb) â€“ set self.__traceback__ to tb and return self.
     */
    with_traceback(opts: DataDimensionalityWarningWithTracebackOptions): Promise<any>;
}
export interface DataDimensionalityWarningOptions {
    args?: any;
}
export interface DataDimensionalityWarningWithTracebackOptions {
}
//# sourceMappingURL=DataDimensionalityWarning.d.ts.map