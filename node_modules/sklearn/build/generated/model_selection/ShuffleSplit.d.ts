import { PythonBridge, NDArray, ArrayLike } from '@/sklearn/types';
/**
  Random permutation cross-validator

  Yields indices to split data into training and test sets.

  Note: contrary to other cross-validation strategies, random splits do not guarantee that all folds will be different, although this is still very likely for sizeable datasets.

  @see https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.ShuffleSplit.html
 */
export declare class ShuffleSplit {
    id: string;
    opts: any;
    _py: PythonBridge;
    _isInitialized: boolean;
    _isDisposed: boolean;
    constructor(opts?: ShuffleSplitOptions);
    get py(): PythonBridge;
    set py(pythonBridge: PythonBridge);
    /**
      Initializes the underlying Python resources.
  
      This instance is not usable until the `Promise` returned by `init()` resolves.
     */
    init(py: PythonBridge): Promise<void>;
    /**
      Disposes of the underlying Python resources.
  
      Once `dispose()` is called, the instance is no longer usable.
     */
    dispose(): Promise<void>;
    /**
      Returns the number of splitting iterations in the cross-validator
     */
    get_n_splits(opts: ShuffleSplitGetNSplitsOptions): Promise<number>;
    /**
      Generate indices to split data into training and test set.
     */
    split(opts: ShuffleSplitSplitOptions): Promise<NDArray>;
}
export interface ShuffleSplitOptions {
    /**
      Number of re-shuffling & splitting iterations.
  
      @defaultValue `10`
     */
    n_splits?: number;
    /**
      If float, should be between 0.0 and 1.0 and represent the proportion of the dataset to include in the test split. If int, represents the absolute number of test samples. If None, the value is set to the complement of the train size. If train_size is also None, it will be set to 0.1.
     */
    test_size?: number;
    /**
      If float, should be between 0.0 and 1.0 and represent the proportion of the dataset to include in the train split. If int, represents the absolute number of train samples. If None, the value is automatically set to the complement of the test size.
     */
    train_size?: number;
    /**
      Controls the randomness of the training and testing indices produced. Pass an int for reproducible output across multiple function calls. See Glossary.
     */
    random_state?: number;
}
export interface ShuffleSplitGetNSplitsOptions {
    /**
      Always ignored, exists for compatibility.
     */
    X?: any;
    /**
      Always ignored, exists for compatibility.
     */
    y?: any;
    /**
      Always ignored, exists for compatibility.
     */
    groups?: any;
}
export interface ShuffleSplitSplitOptions {
    /**
      Training data, where n_samples is the number of samples and n_features is the number of features.
     */
    X?: ArrayLike[];
    /**
      The target variable for supervised learning problems.
     */
    y?: ArrayLike;
    /**
      Group labels for the samples used while splitting the dataset into train/test set.
     */
    groups?: ArrayLike;
}
//# sourceMappingURL=ShuffleSplit.d.ts.map