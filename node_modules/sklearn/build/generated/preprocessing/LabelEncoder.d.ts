import { PythonBridge, NDArray, ArrayLike } from '@/sklearn/types';
/**
  Encode target labels with value between 0 and n_classes-1.

  This transformer should be used to encode target values, i.e. y, and not the input X.

  @see https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.LabelEncoder.html
 */
export declare class LabelEncoder {
    id: string;
    opts: any;
    _py: PythonBridge;
    _isInitialized: boolean;
    _isDisposed: boolean;
    constructor(opts?: LabelEncoderOptions);
    get py(): PythonBridge;
    set py(pythonBridge: PythonBridge);
    /**
      Initializes the underlying Python resources.
  
      This instance is not usable until the `Promise` returned by `init()` resolves.
     */
    init(py: PythonBridge): Promise<void>;
    /**
      Disposes of the underlying Python resources.
  
      Once `dispose()` is called, the instance is no longer usable.
     */
    dispose(): Promise<void>;
    /**
      Fit label encoder.
     */
    fit(opts: LabelEncoderFitOptions): Promise<any>;
    /**
      Fit label encoder and return encoded labels.
     */
    fit_transform(opts: LabelEncoderFitTransformOptions): Promise<ArrayLike>;
    /**
      Transform labels back to original encoding.
     */
    inverse_transform(opts: LabelEncoderInverseTransformOptions): Promise<NDArray>;
    /**
      Set output container.
  
      See Introducing the set_output API for an example on how to use the API.
     */
    set_output(opts: LabelEncoderSetOutputOptions): Promise<any>;
    /**
      Transform labels to normalized encoding.
     */
    transform(opts: LabelEncoderTransformOptions): Promise<ArrayLike>;
}
export interface LabelEncoderOptions {
    /**
      Holds the label for each class.
     */
    classes_?: NDArray;
}
export interface LabelEncoderFitOptions {
    /**
      Target values.
     */
    y?: ArrayLike;
}
export interface LabelEncoderFitTransformOptions {
    /**
      Target values.
     */
    y?: ArrayLike;
}
export interface LabelEncoderInverseTransformOptions {
    /**
      Target values.
     */
    y?: NDArray;
}
export interface LabelEncoderSetOutputOptions {
    /**
      Configure output of transform and fit_transform.
     */
    transform?: 'default' | 'pandas';
}
export interface LabelEncoderTransformOptions {
    /**
      Target values.
     */
    y?: ArrayLike;
}
//# sourceMappingURL=LabelEncoder.d.ts.map