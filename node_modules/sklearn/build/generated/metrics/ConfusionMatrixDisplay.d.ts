import { PythonBridge, NDArray, ArrayLike, SparseMatrix } from '@/sklearn/types';
/**
  Confusion Matrix visualization.

  It is recommend to use from_estimator or from_predictions to create a ConfusionMatrixDisplay. All parameters are stored as attributes.

  @see https://scikit-learn.org/stable/modules/generated/sklearn.metrics.ConfusionMatrixDisplay.html
 */
export declare class ConfusionMatrixDisplay {
    id: string;
    opts: any;
    _py: PythonBridge;
    _isInitialized: boolean;
    _isDisposed: boolean;
    constructor(opts?: ConfusionMatrixDisplayOptions);
    get py(): PythonBridge;
    set py(pythonBridge: PythonBridge);
    /**
      Initializes the underlying Python resources.
  
      This instance is not usable until the `Promise` returned by `init()` resolves.
     */
    init(py: PythonBridge): Promise<void>;
    /**
      Disposes of the underlying Python resources.
  
      Once `dispose()` is called, the instance is no longer usable.
     */
    dispose(): Promise<void>;
    /**
      Plot Confusion Matrix given an estimator and some data.
     */
    from_estimator(opts: ConfusionMatrixDisplayFromEstimatorOptions): Promise<any>;
    /**
      Plot Confusion Matrix given true and predicted labels.
     */
    from_predictions(opts: ConfusionMatrixDisplayFromPredictionsOptions): Promise<any>;
    /**
      Plot visualization.
     */
    plot(opts: ConfusionMatrixDisplayPlotOptions): Promise<any>;
    /**
      Image representing the confusion matrix.
     */
    get im_(): Promise<any>;
    /**
      Array of matplotlib axes. None if include_values is false.
     */
    get text_(): Promise<NDArray[]>;
    /**
      Axes with confusion matrix.
     */
    get ax_(): Promise<any>;
    /**
      Figure containing the confusion matrix.
     */
    get figure_(): Promise<any>;
}
export interface ConfusionMatrixDisplayOptions {
    /**
      Confusion matrix.
     */
    confusion_matrix?: NDArray[];
    /**
      Display labels for plot. If None, display labels are set from 0 to n_classes - 1.
     */
    display_labels?: NDArray;
}
export interface ConfusionMatrixDisplayFromEstimatorOptions {
    /**
      Fitted classifier or a fitted Pipeline in which the last estimator is a classifier.
     */
    estimator?: any;
    /**
      Input values.
     */
    X?: ArrayLike | SparseMatrix[];
    /**
      Target values.
     */
    y?: ArrayLike;
    /**
      List of labels to index the confusion matrix. This may be used to reorder or select a subset of labels. If None is given, those that appear at least once in y_true or y_pred are used in sorted order.
     */
    labels?: ArrayLike;
    /**
      Sample weights.
     */
    sample_weight?: ArrayLike;
    /**
      Either to normalize the counts display in the matrix:
     */
    normalize?: 'true' | 'pred' | 'all';
    /**
      Target names used for plotting. By default, labels will be used if it is defined, otherwise the unique labels of y_true and y_pred will be used.
     */
    display_labels?: ArrayLike;
    /**
      Includes values in confusion matrix.
  
      @defaultValue `true`
     */
    include_values?: boolean;
    /**
      Rotation of xtick labels.
  
      @defaultValue `'horizontal'`
     */
    xticks_rotation?: 'vertical' | 'horizontal' | number;
    /**
      Format specification for values in confusion matrix. If None, the format specification is ‘d’ or ‘.2g’ whichever is shorter.
     */
    values_format?: string;
    /**
      Colormap recognized by matplotlib.
  
      @defaultValue `'viridis'`
     */
    cmap?: string;
    /**
      Axes object to plot on. If None, a new figure and axes is created.
     */
    ax?: any;
    /**
      Whether or not to add a colorbar to the plot.
  
      @defaultValue `true`
     */
    colorbar?: boolean;
    /**
      Dict with keywords passed to matplotlib.pyplot.imshow call.
     */
    im_kw?: any;
    /**
      Dict with keywords passed to matplotlib.pyplot.text call.
     */
    text_kw?: any;
}
export interface ConfusionMatrixDisplayFromPredictionsOptions {
    /**
      True labels.
     */
    y_true?: ArrayLike;
    /**
      The predicted labels given by the method predict of an classifier.
     */
    y_pred?: ArrayLike;
    /**
      List of labels to index the confusion matrix. This may be used to reorder or select a subset of labels. If None is given, those that appear at least once in y_true or y_pred are used in sorted order.
     */
    labels?: ArrayLike;
    /**
      Sample weights.
     */
    sample_weight?: ArrayLike;
    /**
      Either to normalize the counts display in the matrix:
     */
    normalize?: 'true' | 'pred' | 'all';
    /**
      Target names used for plotting. By default, labels will be used if it is defined, otherwise the unique labels of y_true and y_pred will be used.
     */
    display_labels?: ArrayLike;
    /**
      Includes values in confusion matrix.
  
      @defaultValue `true`
     */
    include_values?: boolean;
    /**
      Rotation of xtick labels.
  
      @defaultValue `'horizontal'`
     */
    xticks_rotation?: 'vertical' | 'horizontal' | number;
    /**
      Format specification for values in confusion matrix. If None, the format specification is ‘d’ or ‘.2g’ whichever is shorter.
     */
    values_format?: string;
    /**
      Colormap recognized by matplotlib.
  
      @defaultValue `'viridis'`
     */
    cmap?: string;
    /**
      Axes object to plot on. If None, a new figure and axes is created.
     */
    ax?: any;
    /**
      Whether or not to add a colorbar to the plot.
  
      @defaultValue `true`
     */
    colorbar?: boolean;
    /**
      Dict with keywords passed to matplotlib.pyplot.imshow call.
     */
    im_kw?: any;
    /**
      Dict with keywords passed to matplotlib.pyplot.text call.
     */
    text_kw?: any;
}
export interface ConfusionMatrixDisplayPlotOptions {
    /**
      Includes values in confusion matrix.
  
      @defaultValue `true`
     */
    include_values?: boolean;
    /**
      Colormap recognized by matplotlib.
  
      @defaultValue `'viridis'`
     */
    cmap?: string;
    /**
      Rotation of xtick labels.
  
      @defaultValue `'horizontal'`
     */
    xticks_rotation?: 'vertical' | 'horizontal' | number;
    /**
      Format specification for values in confusion matrix. If None, the format specification is ‘d’ or ‘.2g’ whichever is shorter.
     */
    values_format?: string;
    /**
      Axes object to plot on. If None, a new figure and axes is created.
     */
    ax?: any;
    /**
      Whether or not to add a colorbar to the plot.
  
      @defaultValue `true`
     */
    colorbar?: boolean;
    /**
      Dict with keywords passed to matplotlib.pyplot.imshow call.
     */
    im_kw?: any;
    /**
      Dict with keywords passed to matplotlib.pyplot.text call.
     */
    text_kw?: any;
}
//# sourceMappingURL=ConfusionMatrixDisplay.d.ts.map